//var file_path = "choose_file"
var file_path = txt.string_to_lines("Dexter is\nopen source!")
var height = -0.042;


function my_init_drawing() {
DXF.init_drawing({dxf_filepath: file_path,

    three_points: [[.1, .4, height],    //Point1
                    [.1, .35, height],   //Point2
                    [.13, .4, height] //Point3
                    ], //all numbers in meters
/*
    three_points: [[.1, .3, height],    //Point1
                    [.1, .2,  height],   //Point2
                    [.2, .3, height] //Point3
                    ], //all numbers in meters
*/
//[x,y,z] x is left right, y is in out, z is up down
    plane_normal_guess: [0, 0, 1], //initial guess of plane normal. (usually [0, 0, 1], [+-1, 0, 0], or [0, -1, 0])
    calc_plane_normal: true, //if true then plane_normal_guess is ignored and plane_normal is determined by three points
    tool_height: 0.057000, //if in home position, vertical distance from the tool tip down to axis of rotation of J4
    tool_length: 0.140000, //if in home position, horizontal distance from the tool tip down to axis of rotation of J4
    DXF_units: undefined,  //units the DXF was drawn in, _mm, _in, _cm etc.
                           //undefined means the drawing will fit the bounding box
    draw_speed: .01,       //cartesian speed in (m/s) .02
    draw_res: 0.0001,      //resolution for max step size of interpolated straight line in meters 0.0005
    lift_height: 0.005,     // height that the pen lifts between unconnected lines in meters
    tool_action: false,    ///enable tool actions (true or false)
    tool_action_on_function:  function(){
                                  return [make_ins("w", 64, 2),
                                          Dexter.dummy_move()]},
    tool_action_off_function: function(){
                                  return [make_ins("w", 64, 0),
                                          Dexter.dummy_move()]}
    })
    }
    
new Job({name: "up", robot: Robot.dexter0, do_list: [function() {height += 0.002; out(height); my_init_drawing();}]});
new Job({name: "down", robot: Robot.dexter0, do_list: [function() {height -= 0.002; out(height); my_init_drawing();}]});
my_init_drawing();